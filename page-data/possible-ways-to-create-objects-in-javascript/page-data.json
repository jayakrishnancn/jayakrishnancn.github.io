{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/possible-ways-to-create-objects-in-javascript/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Jayakrishnan C N"}},"markdownRemark":{"id":"13bbe952-c07a-5343-a608-4af91d785a32","excerpt":"Content ES6 Class syntax Object constructor Object’s create method Object literal syntax Function constructor Function constructor with prototype There are many…","html":"<table>\n<thead>\n<tr>\n<th>Content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"#ES6-Class-syntax\">ES6 Class syntax</a></td>\n</tr>\n<tr>\n<td><a href=\"#Object-constructor\">Object constructor</a></td>\n</tr>\n<tr>\n<td><a href=\"#Object-s-create-method\">Object’s create method</a></td>\n</tr>\n<tr>\n<td><a href=\"#Object-literal-syntax\">Object literal syntax</a></td>\n</tr>\n<tr>\n<td><a href=\"#Function-constructor\">Function constructor</a></td>\n</tr>\n<tr>\n<td><a href=\"#Function-constructor-with-prototype\">Function constructor with prototype</a></td>\n</tr>\n</tbody>\n</table>\n<h2>There are many ways to create objects in javascript as below</h2>\n<ul>\n<li>\n<p><u id=\"ES6-Class-syntax\"><strong>ES6 Class syntax:</strong></u>\r\nES6 introduces class feature to create the objects</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">var</span> object <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sudheer\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><u id=\"Object-constructor\"><strong>Object constructor:</strong></u>\r\nThe simplest way to create an empty object is using the Object constructor. Currently this approach is not recommended.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> object <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p><u id=\"Object-s-create-method\"><strong>Object’s create method:</strong></u>\r\nThe create method of Object creates a new object by passing the prototype object as a parameter</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> object <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><u id=\"Object-literal-syntax\"><strong>Object literal syntax:</strong></u>\r\nThe object literal syntax is equivalent to create method when it passes null as parameter</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> object <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p><u id=\"Function-constructor\"><strong>Function constructor:</strong></u>\r\nCreate any function and apply the new operator to create object instances,</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\r\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">21</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">var</span> object <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Sudheer\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n<li>\n<p><u id=\"Function-constructor-with-prototype\"><strong>Function constructor with prototype:</strong></u>\r\nThis is similar to function constructor but it uses prototype for their properties and methods,</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\r\n<span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">\"Sudheer\"</span>\r\n<span class=\"token keyword\">var</span> object <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>","timeToRead":1,"frontmatter":{"title":"Possible ways to create objects in JavaScript","date":"October 24, 2021","description":"Possible ways to create objects in javascript","tags":["javascript","back-to-basics","basics"],"featuredImageAlt":null,"featuredImage":null}},"previous":{"fields":{"slug":"/self-intro/"},"frontmatter":{"title":"Self introduction"}},"next":{"fields":{"slug":"/docker/part-1-introduction/"},"frontmatter":{"title":"Quick Introduction to docker - Part 1"}}},"pageContext":{"id":"13bbe952-c07a-5343-a608-4af91d785a32","previousPostId":"a31c0984-ff1e-5a15-9be9-3ca0cef0bf0f","nextPostId":"214185d1-b0ee-59b5-9e41-dcdb502b8caa"}},
    "staticQueryHashes": ["2841359383"]}