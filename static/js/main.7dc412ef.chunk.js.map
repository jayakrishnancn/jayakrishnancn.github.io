{"version":3,"sources":["components/Home/profile-pic-compressed.jpg","components/Container/Container.js","components/Home/Home.js","components/ErrorPages/UnderConstruction.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","props","c","small","large","className","children","Home","to","src","profilePic","alt","height","width","intrinsicsize","href","target","rel","icon","faGithubAlt","faStackOverflow","faLinkedin","faCodepen","PageUnderConstruction","faExclamationTriangle","App","path","exact","component","UnderConstruction","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,oD,2RCG5B,SAASC,EAAUC,GAC9B,IAAIC,EAAI,GACHC,EAAeF,EAAfE,MAAMC,EAASH,EAATG,MAUX,OATGD,EACCD,EAAI,QACCE,IACLF,EAAI,SAELD,EAAMI,YACLH,GAAI,IAAMD,EAAMI,WAGb,yBAAKA,UAAW,aAAeH,EAAG,IAAIA,EAAG,KAAOD,EAAMK,U,yBCPlD,SAASC,IACpB,OACI,yBAAKF,UAAU,QACX,kBAAC,WAAD,KACI,kBAAC,IAAD,CAASG,GAAG,IAAIH,UAAU,eACtB,yBAAKI,IAAKC,IAAYC,IAAI,SAASC,OAAO,MAAMC,MAAM,MAAMC,cAAc,UAAUT,UAAU,aAElG,4CACA,yBAAKA,UAAU,OAAf,sBACuB,uBAAGU,KAAK,uBAAuBC,OAAO,SAASC,IAAI,uBAAnD,OACnB,6BAFJ,uBAII,8BAGJ,yBAAKZ,UAAU,aACX,4BACI,4BAAI,kBAAC,IAAD,CAASG,GAAG,SAAZ,SACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,SAAZ,aACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,SAAZ,eAGZ,yBAAKH,UAAU,gBACX,4BACI,4BAAI,uBAAGU,KAAK,qCAAqCC,OAAO,SAASC,IAAI,uBAAsB,kBAAC,IAAD,CAAiBC,KAAMC,QAClH,4BAAI,uBAAGJ,KAAK,uDAAuDC,OAAO,SAASC,IAAI,uBAAsB,kBAAC,IAAD,CAAiBC,KAAME,QACpI,4BAAI,uBAAGL,KAAK,8CAA8CC,OAAO,SAASC,IAAI,uBAAsB,kBAAC,IAAD,CAAiBC,KAAMG,QAC3H,4BAAI,uBAAGN,KAAK,qCAAqCC,OAAO,SAASC,IAAI,uBAAsB,kBAAC,IAAD,CAAiBC,KAAMI,Y,YC7B3H,SAASC,IACpB,OACI,kBAAC,EAAD,CAAWlB,UAAU,oBACjB,gCAAK,kBAAC,IAAD,CAAiBA,UAAU,cAAca,KAAMM,OACpD,uDACA,kBAAC,IAAD,CAAShB,GAAG,KAAZ,S,wBCWGiB,MAbf,WACE,OACE,yBAAKpB,UAAU,OACb,kBAAC,IAAD,KACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqB,KAAK,IAAIC,OAAK,EAACC,UAAWrB,IACjC,kBAAC,IAAD,CAAOqB,UAAWC,QCHNC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7dc412ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-pic-compressed.e0537f82.jpg\";","import React from 'react';\nimport './Container.css'\n\nexport default function Container(props){\n    let c = ''\n    let {small,large} = props\n    if(small){\n        c = \"small\"\n    }else if(large){\n        c = \"large\"\n    }\n    if(props.className){\n        c +=\" \" + props.className\n    }\n    \n    return <div className={'container' + (c? \" \"+c :\"\")} >{props.children}</div>\n}","import React,{Fragment} from 'react';\nimport profilePic from './profile-pic-compressed.jpg'\nimport Container from '../Container/Container'\nimport './Home.css'\nimport {NavLink} from 'react-router-dom' \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faGithubAlt, faStackOverflow, faLinkedin, faCodepen} from '../../../node_modules/@fortawesome/free-brands-svg-icons/index.es'\n\nexport default function Home(){\n    return (\n        <div className=\"home\">\n            <Fragment>\n                <NavLink to=\"/\" className=\"profile-pic\">\n                    <img src={profilePic} alt=\"avatar\" height=\"100\" width=\"100\" intrinsicsize=\"100x100\" className=\"rounded\" />\n                </NavLink>\n                <h1>Jayakrishnan</h1>\n                <div className=\"bio\">\n                    Systems Engineer @ <a href=\"https://www.tcs.com/\" target=\"_blank\" rel='noopener noreferrer'>TCS</a>\n                    <br/>\n                    Full stack developer\n                    <br/>\n\n                </div>\n                <nav className=\"menu mt-1\">\n                    <ul>\n                        <li><NavLink to='/blog'>Blog</NavLink></li>\n                        <li><NavLink to='/blog'>Projects</NavLink></li>\n                        <li><NavLink to='/blog'>About me</NavLink></li>\n                    </ul>\n                </nav>\n                <div className=\"social-media\">\n                    <ul>\n                        <li><a href='https://github.com/jayakrishnancn/' target=\"_blank\" rel='noopener noreferrer'><FontAwesomeIcon icon={faGithubAlt} /></a></li>\n                        <li><a href='https://stackoverflow.com/users/4004879/jayakrishnan' target=\"_blank\" rel='noopener noreferrer'><FontAwesomeIcon icon={faStackOverflow} /></a></li>\n                        <li><a href='https://www.linkedin.com/in/jayakrishnancn/' target=\"_blank\" rel='noopener noreferrer'><FontAwesomeIcon icon={faLinkedin} /></a></li>\n                        <li><a href='https://codepen.io/jayakrishnancn/' target=\"_blank\" rel='noopener noreferrer'><FontAwesomeIcon icon={faCodepen} /></a></li>\n                    </ul>\n\n                </div>\n            </Fragment>\n        </div>\n    )\n}","import React from 'react'\nimport Container from '../Container/Container'\nimport {NavLink} from 'react-router-dom'\nimport {faExclamationTriangle} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\n\nexport default function PageUnderConstruction(){\n    return (\n        <Container className=\"text-center mt-3\">\n            <h1> <FontAwesomeIcon className=\"text-danger\" icon={faExclamationTriangle} /></h1>\n            <h3>Page Under Construction</h3>\n            <NavLink to=\"/\">Home</NavLink>\n        </Container>\n\n    )\n}","import React from 'react';\nimport { BrowserRouter, Route,Switch } from 'react-router-dom';\nimport Home from './components/Home/Home'\nimport UnderConstruction from './components/ErrorPages/UnderConstruction'\nimport 'normalize.css';\nimport './App.css'\nimport './util.css'\nimport './topography.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Home}/>\n        <Route component={UnderConstruction} />\n      </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}