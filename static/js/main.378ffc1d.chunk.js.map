{"version":3,"sources":["components/Home/profile-pic-compressed.jpg","components/Home/Home.js","components/Container/Container.js","components/sub_components/HomeAndBack/HomeAndBack.js","components/sub_components/ErrorPage/ErrorPage.js","components/ErrorPages/UnderConstruction.js","components/sub_components/ThemeChooser/ThemeChooser.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","to","src","profilePic","alt","height","width","intrinsicsize","href","target","rel","icon","faGithubAlt","faStackOverflow","faLinkedin","faCodepen","SIZE","Container","props","size","classes","indexOf","children","HomeAndBack","backButtonHandler","e","preventDefault","history","goBack","this","style","marginRight","onClick","faArrowCircleLeft","exact","faHome","React","Component","ErrorPage","heading","message","faExclamationTriangleIcon","faExclamationTriangle","PageNotFound","ThemeChooser","faMoon","faSun","App","themeChangeHandler","isNight","state","setState","hours","Date","getHours","basename","process","path","component","UnderConstruction","night","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.378ffc1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-pic-compressed.e0537f82.jpg\";","import React from 'react';\nimport profilePic from './profile-pic-compressed.jpg'\nimport {NavLink} from 'react-router-dom' \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faGithubAlt, faStackOverflow, faLinkedin, faCodepen} from '@fortawesome/free-brands-svg-icons'\n\nexport default function Home(){\n    return (\n        <div className=\"home\">\n            <div>\n                <NavLink to=\"/\" className=\"profile-pic\">\n                    <img src={profilePic} alt=\"my cute pic\" height=\"100\" width=\"100\" intrinsicsize=\"100x100\" className=\"rounded\" />\n                </NavLink>\n                <h1>Jayakrishnan</h1>\n                <div className=\"bio\">\n                    Systems Engineer @ <a href=\"https://www.tcs.com/\" target=\"_blank\" rel='noopener noreferrer'>TCS</a>\n                    <br/>\n                    Full stack developer\n                    <br/>\n\n                </div>\n                <nav className=\"menu mt-1\">\n                    <ul>\n                        <li><NavLink to='/blog'>Blog</NavLink></li>\n                        <li><NavLink to='/projects'>Projects</NavLink></li>\n                        <li><NavLink to='/about-me'>About me</NavLink></li>\n                    </ul>\n                </nav>\n                <div className=\"social-media\">\n                    <ul>\n                        <li><a href='https://github.com/jayakrishnancn/' target=\"_blank\" rel='noopener noreferrer'><FontAwesomeIcon icon={faGithubAlt} /></a></li>\n                        <li><a href='https://stackoverflow.com/users/4004879/jayakrishnan' target=\"_blank\" rel='noopener noreferrer'><FontAwesomeIcon icon={faStackOverflow} /></a></li>\n                        <li><a href='https://www.linkedin.com/in/jayakrishnancn/' target=\"_blank\" rel='noopener noreferrer'><FontAwesomeIcon icon={faLinkedin} /></a></li>\n                        <li><a href='https://codepen.io/jayakrishnancn/' target=\"_blank\" rel='noopener noreferrer'><FontAwesomeIcon icon={faCodepen} /></a></li>\n                    </ul>\n\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nconst SIZE = ['small','medium','large','article']\n\nexport default function Container(props){\n    \n    let {size,className} = props\n    size = SIZE.indexOf(size) >= 0 ? size: 'medium'\n    let classes = 'container ' + (size?  size :\"\")\n    classes = className ? classes + \" \"+className : classes \n    return <div className={classes} >{props.children}</div>\n}","import React from 'react';\nimport {NavLink} from 'react-router-dom'\nimport Container from '../../Container/Container'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faArrowCircleLeft, faHome} from '@fortawesome/free-solid-svg-icons'\n\nexport default class HomeAndBack extends React.Component{\n    \n    backButtonHandler = e =>{\n        e.preventDefault();\n        this.props.history.goBack();\n    }\n\n    render(){\n        return (\n            <Container className=\"mt-3 jc-between home-and-back d-flex\">\n                { this.props.history ? (\n                    <a href=\"/\" \n                        className=\"btn btn-primary\" \n                        style={{marginRight:\"2rem\"}} \n                        onClick={e=>this.backButtonHandler(e)}>\n                        <FontAwesomeIcon icon={faArrowCircleLeft}/> BACK\n                    </a>\n                ): null}\n                <NavLink \n                to=\"/\" \n                exact \n                className=\"btn btn-primary\"\n                >\n                    <FontAwesomeIcon icon={faHome} /> HOME\n                </NavLink>\n            </Container>\n        )\n    }\n}\n\n","import React from 'react';\nimport Container from '../../Container/Container'\nimport HomeAndBack from '../../sub_components/HomeAndBack/HomeAndBack'\n\nconst ErrorPage = props => {\n    let {heading,message} = props\n    \n    return (\n        <Container className=\"error-page text-center\" size=\"small\">\n            <div>\n                <h1>{heading}</h1>\n                <h3>{message}</h3>\n                <HomeAndBack {...props}/>\n            </div>\n        </Container>\n\n    )\n}\n\nexport default  ErrorPage","import React,{Fragment} from 'react'\nimport {faExclamationTriangle} from '@fortawesome/free-solid-svg-icons'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport ErrorPage from '../sub_components/ErrorPage/ErrorPage'\nconst faExclamationTriangleIcon = <FontAwesomeIcon className=\"text-danger\" icon={faExclamationTriangle} />\n\nconst PageNotFound = props => {\n\n    return (\n        <Fragment>\n                <ErrorPage heading={faExclamationTriangleIcon} message=\"Page Under Construction\" {...props}/>\n        </Fragment>\n    )\n} \nexport default  PageNotFound","import React, { Component } from 'react'; \nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMoon, faSun } from '@fortawesome/free-solid-svg-icons';\n\nclass ThemeChooser extends Component{\n    render(){\n        \n        return (\n            <div className=\"theme cursor\" onClick={this.props.onClick}>\n                <span className=\"theme-icon\"><FontAwesomeIcon icon={faMoon} /></span>\n                <span className=\"theme-icon\"><FontAwesomeIcon icon={faSun} /> </span>\n\n            </div>\n        )\n    }\n}\n\nexport default ThemeChooser;","import React, { Component } from 'react';\nimport { BrowserRouter, Route,Switch } from 'react-router-dom';\nimport Home from './components/Home/Home'\n// import BlogPosts from './components/BlogPosts/BlogPosts'\n// import Article from './components/Article/Article'\n// import Projects from './components/Projects/Projects'\nimport UnderConstruction from './components/ErrorPages/UnderConstruction' \nimport ThemeChooser from './components/sub_components/ThemeChooser/ThemeChooser' \nimport 'normalize.css'\nimport './index.css'\nimport './App.css'\nimport './util.css'\nimport './topography.css'\nimport './buttons.css' \nimport './components/Home/Home.css'\nimport './components/Navbar/Navbar.css' \nimport './components/sub_components/LoadingPage/LoadingPage.css' \nimport './components/sub_components/ErrorPage/ErrorPage.css' \nimport './components/MiniPost/MiniPost.css' \n\nclass App extends Component {\n  \n  constructor(props){\n    super(props);\n    const hours = new Date().getHours()\n    let isNight = hours < 9 || hours > 17  \n    this.state = {\n      isNight\n    }\n  }\n\n  themeChangeHandler = () => {\n    let { isNight } = {...this.state};\n    this.setState({isNight:!isNight})\n  }\n  render(){\n    let { isNight } = this.state;\n\n    return (\n      <div className={ isNight ? \"App dark\" : \"App\" }>\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Switch>\n            <Route path=\"/\" exact component={Home}/>\n            {/*\n\t\t\t\t\t\t\t<Route path=\"/projects\" exact component={Projects}/>\n\t\t\t\t\t\t\t<Route path=\"/projects/:id\" exact render={props => <Article {...props} type=\"PROJECT\"/>}/>\n           \t\t<Route path=\"/blog\" exact component={BlogPosts}/>\n              <Route path=\"/blog/:id\" exact render={props => <Article {...props} type=\"BLOG\"/>}/>\n            */}\n            <Route component={UnderConstruction} />\n          </Switch>\n        </BrowserRouter>\n        <ThemeChooser night={isNight} onClick={this.themeChangeHandler} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}